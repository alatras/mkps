apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "services.fullname" . }}
  labels:
    {{- include "services.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- with .Values.selectors }}
        {{- toYaml . | nindent 6 }}
      {{- end }}    
      {{- include "services.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%     
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- with .Values.selectors }}
          {{- toYaml . | nindent 8 }}
        {{- end }}          
        {{- include "services.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "services.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: filebeat-sidecar
          image: "docker.elastic.co/beats/filebeat:8.4.3"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              memory: 64Mi
              cpu: 100m
            limits:
              memory: 256Mi
              cpu: 500m
          volumeMounts:
            - name: app-logs
              mountPath: /logs/
            - name: filebeat-config
              mountPath: /usr/share/filebeat/filebeat.yml
              subPath: filebeat.yml
        - name: metricbeat-sidecar
          image: "docker.elastic.co/beats/metricbeat:8.4.3"
          resources:
            requests:
              memory: 64Mi
              cpu: 100m
            limits:
              memory: 256Mi
              cpu: 500m
          env:
            - name: ELASTICSEARCH_HOSTS
              valueFrom:
                secretKeyRef:
                  name: metricbeat
                  key: hosts
            - name: ELASTICSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: metricbeat
                  key: username
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: metricbeat
                  key: password
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: "MONGODB_URI"
              valueFrom:
                secretKeyRef:
                  name: mongo
                  key: url
            - name: "MONGODB_NAME"
              valueFrom:
                secretKeyRef:
                  name: mongo
                  key: name
            - name: "AUTH0_DOMAIN"
              valueFrom:
                secretKeyRef:
                  name: auth0
                  key: domain
            - name: "AUTH0_AUDIENCE"
              valueFrom:
                secretKeyRef:
                  name: auth0
                  key: audience
            - name: "AUTH0_CLIENT_ID"
              valueFrom:
                secretKeyRef:
                  name: auth0
                  key: clientId
            - name: "AUTH0_CLIENT_SECRET"
              valueFrom:
                secretKeyRef:
                  name: auth0
                  key: clientSecret
            - name: "AUTH0_API_URL"
              valueFrom:
                secretKeyRef:
                  name: auth0
                  key: api_url
                  optional: true
            - name: "STRIPE_SECRET_KEY"
              valueFrom:
                secretKeyRef:
                  name: stripe
                  key: secret
            - name: "STRIPE_WEBHOOK_SECRET_KEY"
              valueFrom:
                secretKeyRef:
                  name: stripe
                  key: webhook
            - name: "AWS_S3_BUCKET_NAME_ASSETS"
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: bucket_assets
            - name: "AWS_S3_BUCKET_NAME_NFT_ORIG"
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: bucket_nft
            - name: "AWS_S3_BUCKET_REGION"
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: region
            - name: "ROYALTIES"
              valueFrom:
                configMapKeyRef:
                  name: market-place-be
                  key: royalties_value
            - name: "WEB_APP_URL"
              valueFrom:
                configMapKeyRef:
                  name: market-place-be
                  key: web_app_url
            - name: "AWS_CF_DISTRIBUTION_ASSETS"
              valueFrom:
                configMapKeyRef:
                  name: market-place-be
                  key: aws_cf_distribution_assets
            - name: "ENVIRONMENT"
              valueFrom:
                configMapKeyRef:
                  name: market-place-be
                  key: environment
            - name: "REDIS_URL"
              valueFrom:
                configMapKeyRef:
                  name: market-place-be
                  key: redis_url
            - name: "REDIS_PORT"
              valueFrom:
                configMapKeyRef:
                  name: market-place-be
                  key: redis_port
            - name: "IS_SQS_DISABLED"
              valueFrom:
                configMapKeyRef:
                  name: market-place-be
                  key: is_sqs_disabled
                  optional: true
            - name: "ORIGINAL_CONTENT_PUBLIC"
              valueFrom:
                configMapKeyRef:
                  name: market-place-be
                  key: original_content_public
                  optional: true
            - name: "AWS_SQS_ETH_EVENTS_URL"
              valueFrom:
                configMapKeyRef:
                  name: market-place-be
                  key: aws_sqs_eth_events_url
                  optional: true
            - name: "AWS_SQS_AVN_TRANSACTIONS_URL"
              valueFrom:
                configMapKeyRef:
                  name: market-place-be
                  key: aws_sqs_avn_transactions_url
                  optional: true
            - name: "IS_KYC_ENABLED"
              valueFrom:
                configMapKeyRef:
                  name: market-place-be
                  key: is_kyc_enabled
                  optional: true
            - name: "GET_ID_API_URL"
              valueFrom:
                configMapKeyRef:
                  name: market-place-be
                  key: get_id_api_url
                  optional: true
            - name: "GET_ID_API_KEY"
              valueFrom:
                configMapKeyRef:
                  name: market-place-be
                  key: get_id_api_key
                  optional: true
            - name: "GET_ID_SIGN_KEY"
              valueFrom:
                configMapKeyRef:
                  name: market-place-be
                  key: get_id_sign_key
                  optional: true
            - name: "GET_ID_FLOW_NAME"
              valueFrom:
                configMapKeyRef:
                  name: market-place-be
                  key: get_id_flow_name
                  optional: true
            - name: "CYBAVO_WALLET_ID"
              valueFrom:
                configMapKeyRef:
                  name: market-place-be
                  key: cybavo_wallet_id
                  optional: true
            - name: "CYBAVO_API_URL"
              valueFrom:
                configMapKeyRef:
                  name: market-place-be
                  key: cybavo_api_url
                  optional: true
            - name: "CYBAVO_API_CODE"
              valueFrom:
                configMapKeyRef:
                  name: market-place-be
                  key: cybavo_api_code
                  optional: true
            - name: "CYBAVO_API_SECRET"
              valueFrom:
                configMapKeyRef:
                  name: market-place-be
                  key: cybavo_api_secret
                  optional: true
            - name: "PORT"
              value: "5002"
            - name: "NODE_EXTRA_CA_CERTS"
              value: "/usr/src/app/rds-combined-ca-bundle.pem"
            - name: "API_URL"
              valueFrom:
                secretKeyRef:
                  name: test-auth0
                  key: api_url
                  optional: true
            - name: "TEST_AUTH0_USERNAME"
              valueFrom:
                secretKeyRef:
                  name: test-auth0
                  key: test_auth0_username
                  optional: true
            - name: "TEST_AUTH0_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: test-auth0
                  key: test_auth0_password
                  optional: true
            - name: "TEST_AUTH0_REALM"
              valueFrom:
                secretKeyRef:
                  name: test-auth0
                  key: test_auth0_realm
                  optional: true
            - name: "TEST_AUTH0_DOMAIN"
              valueFrom:
                secretKeyRef:
                  name: test-auth0
                  key: test_auth0_domain
                  optional: true
            - name: "TEST_AUTH0_CLIENT_ID"
              valueFrom:
                secretKeyRef:
                  name: test-auth0
                  key: test_auth0_client_id
                  optional: true
            - name: "TEST_AUTH0_CLIENT_SECRET"
              valueFrom:
                secretKeyRef:
                  name: test-auth0
                  key: test_auth0_client_secret
                  optional: true
          ports:
            - name: http
              containerPort: 5002
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 60
            httpGet:
              path: /
              port: http
          readinessProbe:
            initialDelaySeconds: 60
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: app-logs
              mountPath: /usr/src/app/logs/
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: app-logs
          emptyDir: { }
        - name: filebeat-config
          configMap:
            name: filebeat-configmap-{{ template "services.fullname" . }}
            items:
              - key: filebeat.yml
                path: filebeat.yml
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
